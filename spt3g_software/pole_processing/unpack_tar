#!/usr/bin/env python

import os
import glob
import shutil
import subprocess as sp
import shlex
import re
import sys
from warnings import warn

inroot = '/spt/data/tar'
outroot = '/big_scratch'

if len(sys.argv) > 1:
    tar_files = sys.argv[1:]
    force = True
else:
    tar_files = sorted(glob.glob(os.path.join(inroot, 'aux-tar_*.tar.gz')))
    force = False

header = False

for tarpath in tar_files:

    os.chdir(outroot)

    # extract directory name
    m = re.search('aux-tar_(.*).tar.gz', tarpath)
    if m:
        relpath, = m.groups()
    else:
        warn('Mangled filename {}, skipping'.format(tarpath))
        continue

    # skip if already processed
    relpath = relpath.replace('__', '/').lstrip('/')
    if os.path.exists(relpath) and not force:
        continue

    abspath = os.path.join(outroot, relpath)

    if not header:
        print('Processing compressed user data directories...\n')
        header = True

    # create root directory
    relroot = os.path.dirname(relpath)
    if not os.path.exists(relroot):
        os.makedirs(relroot)
    os.chdir(relroot)

    # extract
    print('*' * 50)
    print('Extracting {} to {}'.format(tarpath, abspath))
    cmd = shlex.split("tar -xzf {} --transform=\'s#/{}/##g\'".format(tarpath, relroot))

    try:
        sp.check_call(cmd)
    except Exception as e:
        warn('Extraction failed:\n{}'.format(e))
    else:

        # set permissions
        print('Setting permissions for {}'.format(abspath))
        cmd1 = 'find {} -type f -exec chmod og-w {{}} \;'.format(abspath)
        cmd2 = 'find {} -type d -exec chmod o-w,g+w {{}} \;'.format(abspath)

        try:
            print(cmd1)
            sp.check_call(shlex.split(cmd1))
            print(cmd2)
            sp.check_call(shlex.split(cmd2))
        except Exception as e:
            warn('Permissions failed:\n{}'.format(e))
        else:
            print('Extraction of {} complete'.format(abspath))

    print('=' * 50 + '\n')
