# This code find all cal sweeps, analyze all the calibrator scans,
# and fit for tau. 
# You will need to run gather_calibrator_info.py before this code.

from spt3g import core,gcp,dfmux
import pylab as pl
import numpy as np
import glob, os
import pickle as pkl
import os.path
from glob import glob
import tau_analysis

# year to analyze
year = '2019'

# range of obsid you want to analyze
obsid_range = [70000000, 73000000]

# data folder is where you want to save the processed calibrator files
datafolder='/spt/user/panz/data/calibrator_output/'

# Folder to save the time constant results
outputfolder = '/spt/user/panz/data/time_constant_results'

#############################
##  find all the cal sweeps #
#############################

# calibrator information, generated by gather_calibrator_info.py
# cal_info has calibrator frequency and elevation information
info_file = '/home/panz/spt3g/calibrator/calibrator.pkl'
cal_info = pkl.load(open(info_file,'rb'))
obsids = sorted(list(cal_info.keys()))

# sweeps_4hz has the 4hz obsid of the cal sweep
# all_cal_sweeps are all the cal sweep files
sweeps_4hz= {}
all_cal_sweeps={}

#k is the index for the cal sweeps
k=0
for i in range(len(obsids)-5):
    if abs(cal_info[obsids[i]]['freq'] - 4.0) < 0.01\
       and abs(cal_info[obsids[i+1]]['freq'] - 13.0) <0.01\
       and abs(cal_info[obsids[i+2]]['freq'] - 22.0) <0.01\
       and abs(cal_info[obsids[i+3]]['freq'] - 37.0) <0.01\
       and abs(cal_info[obsids[i+4]]['freq'] - 52.0) <0.01\
       and abs(cal_info[obsids[i+5]]['freq'] - 64.0) <0.01:
        k = k+1
        sweeps_4hz[obsids[i]] = int(cal_info[obsids[i]]['el'])
        sweep = {4: obsids[i], 13: obsids[i+1], 22: obsids[i+2],\
                37: obsids[i+3], 52: obsids[i+4], 64:obsids[i+5]}
        all_cal_sweeps['sweep'+str(k)+'_el_'+str(int(cal_info[obsids[i]]['el']))] = sweep

#############################
# analyze all the cal sweeps#
#############################
#The calibrator analysis in autoprocess is off at higher frequencies
#The method here preserves the out-of-phase part

# all obsids in cal sweeps
obsids=[]
for sweep in all_cal_sweeps.keys():
  calsweep= all_cal_sweeps[sweep]
  for freq in calsweep:
    obsids.append(calsweep[freq])
obsids=sorted(obsids)

# You shouldn't need to change any of the folders below
# They should be standard locations in Amundsen/Scott
codefolder = './'
fullrateelnod='/spt/data/bolodata/fullrate/elnod/'
fullratecal='/spt/data/bolodata/fullrate/calibrator/'
elnod_datafiles= glob('/spt/user/production/calibration/elnod/*.g3')
elnod_dir= '/spt/user/production/calibration/elnod/'

#elnod ids
elnod_ids= []
for elnod_datafile in elnod_datafiles:
    temp= elnod_datafile.split('/')[-1].split('.')[0]
    if int(temp)>40000000:
        elnod_ids.append(int(temp))
elnod_ids= np.array(sorted(elnod_ids))


for obsid in obsids:
    if int(obsid)> obsid_range[0] and int(obsid)< obsid_range[1]:
        elnod_id= str(max(elnod_ids[np.where(elnod_ids< int(obsid))]))
        if not os.path.isfile(datafolder+str(obsid)+'.g3'):
            print('python '+codefolder+'analyze_calibrator.py -o  '+ datafolder+str(obsid)+'.g3   '
                  + elnod_dir+str(elnod_id)+'.g3   '+ fullratecal+ str(obsid)+'/0000.g3')
            os.system('python '+codefolder+'analyze_calibrator.py -o  '+ datafolder+str(obsid)
                      +'.g3   '+ elnod_dir+str(elnod_id)+'.g3   '+ fullratecal+ str(obsid)+'/0000.g3')


################################
# fit all the cal sweeps to tau#
################################
calibratorfolder = datafolder
tau_analysis.analyze_tau(all_cal_sweeps, calibratorfolder,
                         outputfolder, year=year, obsid_range= obsid_range,
                         sn_cut_4hz= 10, chisqcut= 100)
