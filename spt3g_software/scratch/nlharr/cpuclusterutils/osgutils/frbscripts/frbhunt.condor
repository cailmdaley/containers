#!/bin/bash
# executable is the location of the executable
executable = /home/nlharr/spt3g_software/scratch/nlharr/cpuclusterutils/osgutils/frbscripts/frbhuntscript.sh
ncpus = 1

+ProjectName = "SouthPoleTelescope"

# universe is into which queue the job should be submitted into
universe = vanilla

# Location where log files should be put. The variable 
# `$(cluster)` is the unqiue ID assigned by HTCondor
# to the job. 
Error   = /scratch/nlharr/osglogs/std_error_$(cluster)_log
Output  = /scratch/nlharr/osglogs/std_output_$(cluster)_log
Log     = /scratch/nlharr/osglogs/condor_job_$(cluster)_log

# Job requirements 
# Example: `(GLIDEIN_ResourceName =!= "NPX")` means that the 
#          advertised resource name cannot match "NPX"
# Example: `(OpSysAndVer == "CentOS6" || OpSysAndVer == "RedHat6" || OpSysAndVer == "SL6")` 
#          means that the advertised `OpSysAndVer` 
#          (or operation system and version) is RHEL6 or one of this derivaties



#Requirements = ((OpSysAndVer == "CentOS6" || OpSysAndVer == "RedHat6" || OpSysAndVer == "SL6") && (GLIDEIN_ResourceName =!= "NPX")) && ((GLIDEIN_ResourceName == "MWT2" || GLIDEIN_Site == "MWT2-COREOS"))

Requirements = ((OpSysAndVer == "CentOS6" || OpSysAndVer == "RedHat6" || OpSysAndVer == "SL6") && (GLIDEIN_ResourceName =!= "NPX"))



# Special condition to get access to the 
# Friends of MWT2 queue available from
# login.ci-connect.uchicago.edu
+WANT_RCC_ciconnect = True

# `request_cpus` tells HTCondor how many CPU cores
# this jobs needs, default value is 1
request_cpus = $(ncpus)

# `request_memory` tells HTCondor how much 
# memory (in MB) are needed. 
# Here 2 GB are requested, which is the
# default for OSG. 
request_memory = 8192

# `request_disk` tells HTCondor how much 
# storage (in KB) are needed.
# Here 1 GB of disk are requested. 
request_disk = 8388608

# `transfer_input_files` defines which files should
# be transfered to the remote worker from the
# local machine
transfer_input_files = /home/nlharr/user.cert,/home/nlharr/spt3g_software/frbutils/python/frbhunting.py

# `transfer_output_files` similar to `transfer_input_files`
# this allows one to define which files should be transfered
# back to the local host
transfer_output_files = ""

# `when_to_transfer_output` defines when the output should be transferred
when_to_transfer_output = ON_EXIT
# Whether or not to transfer executable to remote location
transfer_executable = True

# Defines possible arguments to the executable defined above


#               1                2                  3                4                   5                     6           7              8           9           10            11         12            13          14                 15                      16            17
arguments = $(input_file) $(out_fn) $(output_directory) $(find_ll_thresh) $(other_ll_thresh) $(inject_fake_signal) $(fluence) $(time_scale) $(cluster) $(glitchy_prob) $(simulate_timestreams)

#arguments = ra23h30dec-55_idf_20120417_165704_150ghz.h5 frb_8_8_ra23h30dec-55_idf_20120417_165704_150ghz_search.g3 frb_8_8_ra23h30dec-55_idf_20120417_165704_150ghz_flag.g3 frb_8_8_ra23h30dec-55_idf_20120417_165704_150ghz_combo.g3 inject_88_100jyms 8.0 8.0 1 100 0.001 $(cluster) 4 4 0.98 1.0 0.005


# Defines the end of the jb submission file and tells HTCondor
# to queue a job. The number, in this example, 1
# signifies how many copies of the job should be submitted.
# For example, the line `queue 5` will submit 5 copies
# of the job.
queue 1
